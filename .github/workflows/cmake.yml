name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    name: Build on Linux Systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            cuda: "11.3"
            optix: "7.3.0"
            ospray: "2.5.0"
            arch: 86
          # - os: ubuntu-18.04
          #   cuda: "10.2"
          #   arch: 75
          # - os: ubuntu-18.04
          #   cuda: "10.2"
          #   arch: 70
          # - os: ubuntu-18.04
          #   cuda: "10.2"
          #   arch: 61
          # - os: ubuntu-18.04
          #   cuda: "10.2"
          #   arch: 37
    env:
      build_dir: "build"
      config: "Release"
      GDT_CUDA_ARCHITECTURES: ${{ matrix.arch }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install cmake gcc g++ libtbb-dev libglfw3-dev xorg-dev
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: bash ./cuda-cmake-github-actions/scripts/actions/install_cuda_ubuntu.sh
        shell: bash
      - name: Install OptiX
        env:
          optix: ${{ matrix.optix }}
        run: bash ./optix-cmake-github-actions/install_optix.sh
        shell: bash
      - name: Install OSPRay
        env:
          ospray: ${{ matrix.ospray }}
        run: bash ./ospray-cmake-github-actions/install_ospray_ubuntu.sh
        shell: bash
      - name: CMake
        env: 
          OptiX_INSTALL_DIR: ${{ env.OptiX_INSTALL_DIR }}
        run: cmake . -B ${{ env.build_dir }} -DCMAKE_BUILD_TYPE=${{ env.config }} -DBUILD_OPTIX7=ON -DBUILD_OSPRAY=ON -Dospray_DIR=${{ env.OSPRAY_CMAKE_DIR }}
      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake --build . --target all --verbose -j `nproc`

  # build_windows:
  #   name: Build on Windows
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       include:
  #         - os: windows-2019
  #           visual_studio: "Visual Studio 16 2019"
  #           cuda: "11.5.1"
  #           arch: 86
  #         - os: windows-2019
  #           visual_studio: "Visual Studio 16 2019"
  #           cuda: "11.5.1"
  #           arch: 75
  #         - os: windows-2019
  #           visual_studio: "Visual Studio 16 2019"
  #           cuda: "11.5.1"
  #           arch: 70
  #         - os: windows-2019
  #           visual_studio: "Visual Studio 16 2019"
  #           cuda: "11.5.1"
  #           arch: 61
  #         - os: windows-2019
  #           visual_studio: "Visual Studio 16 2019"
  #           cuda: "11.5.1"
  #           arch: 37
  #   env:
  #     build_dir: "build"
  #     config: "Release"
  #     GDT_CUDA_ARCHITECTURES: ${{ matrix.arch }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #     - name: Install CUDA
  #       env:
  #         cuda: ${{ matrix.cuda }}
  #         visual_studio: ${{ matrix.visual_studio }}
  #       shell: powershell
  #       run: .\dependencies\cuda-cmake-github-actions\scripts\actions\install_cuda_windows.ps1
  #     - name: CMake
  #       run: cmake . -B ${{ env.build_dir }} -G "${{ matrix.visual_studio }}" -A x64
  #     - name: Build
  #       working-directory: ${{ env.build_dir }}
  #       run: cmake --build . --config ${{ env.config }} --target ALL_BUILD --verbose
